HW_1. The first part
Linux terminal (GitBash) commands

1) Посмотреть где я // question

A.1: pwd // answer

2) Создать папку // question

A.2: mkdir qa1 // answer: создаем папку в текущей директории

3) Зайти в папку // question

A.3.1: cd !$ // answer 1: заходим в только что созданную папку
A.3.2: cd qa1 // answer 2: заходим в папку в текущей дректории

4) Создать 3 папки // question

A.4.1: mkdir q1 // answer 1: создаем каждую папку по отдельности
mkdir q2
mkdir q3
A.4.2:  mkdir qa1; mkdir qa2; mkdir qa3 // answer 2: создаем папки, последовательно записывая команды через ;
A.4.3:  mkdir -p {qaa1,qaa2,qaa3} // answer 3: создаем 3 папки в текущей директории
A.4.4:  mkdir -p qaa4/{qaa4_1,qaa4_2} // answer 4: создаем новую папку в текущей директории и в ней (созданной) сразу 2 вложенных (всего 3 (три))
A.4.5:  mkdir -p {/d/qa_less/qa_hw1/qa4/q1/qaa4/q1,/d/qa_less/qa_hw1/qa4/q1/qaa3/q1,/d/qa_less/qa_hw1/qa4/q1/qaa2/q1} // answer 5: создаем 3 папки в произвольных диреториях, указывая полный путь

5) Зайти в любоую папку // question
A.5.1: cd /d/qa_less/qa_hw1/qa4  // answer: указываем полный путь к папке

6) Создать 5 файлов (3 txt, 2 json) // question

A.6.1:  MINGW64 /d/qa_less/qa_hw1/qa4 - текущая директория
$ touch /d/qa_less/qa_hw1/qa4/q1/{1.txt,2.txt,3.txt,1.json,2.json} - создание файлов в отличающейся директории


7) Создать 3 папки // question

A.7.1: ссылка на ответы из 4 вопроса: A.4.1, A.4.2, A.4.3, A.4.4, A.4.5

8. Вывести список содержимого папки // question

A.8.1: ls -a  // answer1 : вывод содержимого в строку
A.8.2: ls -la  // answer2 : вывод содержимого в столбец

9) + Открыть любой txt файл // question

A.9.1: MINGW64 /d/qa_less  - текущая директория
$ ls /d/qa_less/qa_hw1/qa2; cat /d/qa_less/qa_hw1/qa2/qa22.txt  - открытие файла при помощи cat, в любом месте, зная его расположение
далее переходим к A.10.1:

A.9.2: MINGW64 /d/qa_less  - текущая директория
$ vim /d/qa_less/qa_hw1/qa2/qa22.txt - открытие файла при помощи vim, в любом месте, зная его расположение
далее переходим к A.10.2:

10) + написать туда что-нибудь, любой текст. // question

A.10.1: MINGW64 /d/qa_less  - текущая директория
$ ls /d/qa_less/qa_hw1/qa2; cat >> /d/qa_less/qa_hw1/qa2/qa22.txt  - выведение списка файлов и папок, затем открытие файла для дополнения его текстом при помощи cat, в любом месте, зная его расположение (команды выполняются последовательно ls ; cat >>)
далее переходим к A.11.1:

A.10.2: A.9.2->нажать i->текст
далее переходим к A.11.2:

11) + сохранить и выйти. // question

A.11.1: A.10.1->нажать enter-> ctrl+c = выход из режима дополнения файла
A.11.2: A.10.2->esc-> набрать ":wq"

12) Выйти из папки на уровень выше // question

A.12.1: cd ..

—
13) переместить любые 2 файла, которые вы создали, в любую другую папку. // question

A.13.1: $ mv 1.json 2.json qa1 | mv 1.txt qa2/1_2.txt | mv 2.txt qa2/2_2.txt // answer: в первой части, до | перемещаются 2 файла .json в папку, расположенную в текущем каталоге. Во второй и третьей части перемещаются по одному файлу с переименованием.

14) скопировать любые 2 файла, которые вы создали, в любую другую папку. // question

A.14.1 $ cp 1.json 2.json qa1 | cp 1.txt qa2/1_2.txt | cp 2.txt qa2/2_2.txt  // answer: в первой части, до | копируются 2 файла .json в папку, расположенную в текущем каталоге. Во второй и третьей части копируется по одному файлу с переименованием.


15) Найти файл по имени // question

A.15.1: $ find -type f -name "1.txt"  // answer: ищем файл начиная с текущей директории и вглубь по всем папкам

16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает.  // question

A.16.1: grep -n -i alex nything_1.txt >> alex.txt | tail -F -n1 nything_1.txt | grep -n -i --line-buffered alex >> alex.txt   // answer: 

grep -n -i alex nything_1.txt >> alex.txt - этим ищем в файле nything_1.txt строки содержащие "alex" без учета регистра букв, затем записываем строки с совпадением с нумерацией строки в файл alex.txt.
tail -F -n1 nything_1.txt | - здесь читаем последнюю строку динамически изменяющегося файла
grep -n -i --line-buffered alex >> alex.txt - этим ищем новые строки с "alex" и записываем их с новой нумерацией в файл "alex.txt"

17) вывести несколько первых строк из текстового файла

A.17.1: $ head -n2 file.txt  - выведет первые 2 строки файла

18) вывести несколько последних строк из текстового файла

$ tail -n2 file.txt - выводит последние 2 строки файла

19) просмотреть содержимое длинного файла (команда less) изучите как она работает.

A.19: $ less nything_1.txt выводит на экран 1 страницу текста, читение либо по строкам стрелками, либо pgup/pgdn, выход q


20) вывести дату и время  // question

A.20.1: $ date +%c  

=========

Задание *
1) Отправить http запрос на сервер.
http://162.55.220.72:5005/terminal-hw-request

A.1*: отправляем запрос : 
$ curl -i http://162.55.220.72:5005/terminal-hw-request

получаем ответ: {"Intro":"Hello!! This is your the first response from server","Tasks":{"Task_1":"Send the next URL in terminal: http://162.55.220.72:5005/get_method?name=(set_your_String)&age=(set_your_number)","result":["Your_String","Your_number"]}}

отправляем второй запрос, измененный до понятного серверу состояния: 
$ curl -i "http://162.55.220.72:5005/get_method?name=Fillenn&age=38"
получаем искомый по заданию ответ: 
["Fillenn","38"]

исправление
@JAK_SIE_MASZ (nick = Кiт )
curl -X post 'http://162.55.220.72:5005/get_method?name=Blablabla&age=666'
curl -data 'http://162.55.220.72:5005/get_method?name=Blablabla&age=666'
ответ:
"Natalia MOLODEC"

2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13

#!C:\"QA programm"\Git\git-bash.exe //- указываем путь к экзешнику bash; чтобы путь читался нормально, названия папок с пробелом надо взять в ""
mkdir -p /d/qa_less/qa_hw1/qa1/script // создаем папку
cd /d/qa_less/qa_hw1/qa1/script //- заходим в нее
mkdir -p qaa4/{qaa4_1,qaa4_2} //- создаем в ней 3 папки (включая вложенные)
cd qaa4  //- переходим в созданную папку
touch qaa4_1/{1.txt,2.txt,3.txt}; touch qaa4_2/{1.json,2.json} // создаем 5 файлов
mkdir -p {/d/qa_less/qa_hw1/qa1/script/sc1/,/d/qa_less/qa_hw1/qa1/script/sc2/,/d/qa_less/qa_hw1/qa1/script/sc3/} // создаем еще 3 папки
cd /d/qa_less/qa_hw1/qa1/script | ls -la // выводим содержимое папки
cp /d/qa_less/qa_hw1/qa1/script/qaa4/qaa4_1/{1.txt,2.txt} /d/qa_less/qa_hw1/qa1/script/sc1/ // копируем 2 файла. Вместо перемещения сделано копирование, чтобы можно было отследить выполнение. При желании заменить cp на mv и будет перемещение.